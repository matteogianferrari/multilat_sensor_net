@startuml

skinparam backgroundColor #FFFFFF

' Defines the participants in the protocol
box Client #6897BB
participant "ClientApp" as ClientApp
end box

box Network #FFF68F
participant "NetworkService" as NetworkService
end box

== gRPC StartNetwork ==

' NetworkService thread is running waiting for incoming requests
activate NetworkService
activate ClientApp

' ClientApp requests StartNetwork RPC sending a StartRequest message
' containing the requesting client ID
ClientApp -> NetworkService: StartRequest(client_id)

' The RPC request blocks the ClientApp thread while waiting for a response
deactivate ClientApp

' NetworkService receives the RPC request for StartNetwork
' NetworkService has a thread pool for handling asynchronously the requests
' from multiple client, it assigns the request to a worker thread
activate NetworkService

' NetworkService StartNetwork procedure is executed
NetworkService -> NetworkService: Process Request

' The distributed network isn't active so the network is started
alt Success: is_active=False
    ' The NetworkService sends a StartResponse message to the ClientApp containing
    ' a positive status for the requested operation and the number of nodes present
    ' in the distributed network
    NetworkService --> ClientApp : StartResponse (status: SS_OK, n_nodes)
    activate ClientApp
' The distributed network is active so the network cannot be started again
else Error: is_active=True
    ' The NetworkService sends a StartResponse message to the ClientApp containing
    ' a negative status for the requested operation and the number of nodes present
    ' in the distributed network
    NetworkService --> ClientApp : StartResponse (status: SS_ERROR, n_nodes)
    deactivate NetworkService
end

@enduml
